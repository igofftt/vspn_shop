{{!< ../layout}}
<style>
    .bgCategories {
        width: 100%;
        height: auto;
        opacity: 0.1;
        background-repeat: no-repeat;
        -webkit-filter: blur(5px);
        -moz-filter: blur(5px);
        filter: blur(5px);
    }

    .product-tmp {
        -webkit-transition: all 0.6s linear;
        -moz-transition: all 0.6s linear;
        -o-transition: all 0.6s linear;
        transition: all 0.6s linear;
        position: fixed;
        width: calc(100% - 30px);
        top: 0px;
        left: 15px;
        transform: scale(1);
        z-index: 1001;
    }

    .product-tmp.animate {
        transform: scale(0.2)
    }

    .form-control {
        width: 100%;
        border: 1px solid #d1d7de;
        border-radius: 3px;
        font-size: 12px;
        padding: 3px 5px;
        margin-bottom: 10px;
        box-sizing: border-box;
    }

    .label {
        margin-bottom: 5px;
    }

    [type="color"] {
        height: 12px;
        padding: 0px 4px;
    }
</style>

<div id="main">
    <div class="container">
        <div class="breadcrumbs">
            <a href="/" class="home"><svg> <use xlink:href="/images/site/svg/sprite.svg#icon_home"></use> </svg></a>
            <a href="/catalog">Каталог</a>
            <span class="name-current-cat"></span>
        </div>
        <section class="catalog">
            <header>
                <h1 class="name-current-cat"></h1>
                <span class="count-t"></span>
                <div class="view">
                    <i class="list"><svg> <use xlink:href="/images/site/svg/sprite.svg#icon_menu-list"></use> </svg></i>
                    <i class="pallet active"><svg> <use xlink:href="/images/site/svg/sprite.svg#icon_menu-palett"></use> </svg></i>
                </div>
            </header>
            <div class="catalog__content layout">
                <aside>
                    <form action="#" autocomplete="off" name="filter-form">
                        <p>Раздел</p>
                        <fieldset class="categories-main-fieldset">
                            <div class="form-selects">
                                <select class="custom-select" name="categories-select" autocomplete="off">
                                    {{# each menu }}
                                        {{#iff cat '==' 0 }}
                                            <option value="{{ ../id }}" {{# iff ../id '==' ../../category }}selected{{/iff}}>
                                                {{ ../name }}
                                            </option>
                                        {{/iff}}
                                    {{/ each }}
                                </select>
                            </div>

                            <div class="sub-categories-cont"></div>
                        </fieldset>
                        <!--<p>{{ params_name }}</p>-->

                        <p>Характеристики</p>
                        <fieldset>
                            <div class="cha-s">
                                <div class="cont"></div>
                            </div>
                        </fieldset>

                        <fieldset>
                            <div class="form-range">
                                <div id="width_range"></div>
                            </div>
                            <input type="hidden" name="width_range_max" value="{{ filters.params.0.val_max }}">
                            <input type="hidden" name="width_range_min" value="{{ filters.params.0.val_min }}">
                        </fieldset>
                        <p>Цена</p>
                        <fieldset>
                            <div class="form-range">
                                <div id="price_range" class="twice"></div>
                                <div class="range-inputs">
                                    <input type="text" id="width-price-min" value="{{ filters.price.0.price_min }}">
                                    <input type="text" id="width-price-max" value="{{ filters.price.0.price_max }}">
                                </div>
                            </div>
                        </fieldset>
                        <p>Бренд</p>
                        <fieldset>
                            <div class="form-checks">
                                {{# each brand }}
                                    <div class="input-check">
                                        <input
                                            value="{{ id }}"
                                            name="brand[]"
                                            onclick="filCat.selectCatalogs()"
                                            type="checkbox"
                                            id="check{{ id }}"
                                        />

                                        <label for="check{{ id }}">{{ name }}</label>
                                    </div>
                                {{/ each }}
                            </div>
                        </fieldset>
                    </form>
                </aside>

                <div class="catalog__main">
                    <ul class="selResult">
                        <p><img style="padding-top: 20px" src="/images/site/logo.png" class="bgCategories"/></p>
                    </ul>

                    <input type="hidden" name="current-page" autocomplete="off" value="{{ page }}">
                    <input type="hidden" name="category" autocomplete="off" value="{{ category }}">
                    <input type="hidden" name="last-page" autocomplete="off" value="">

                    <div class="pagination layout paginator">
                        <div class="btn-field next-only">
                            <a href="javascript:void(0)" class="btn">Следующая страница</a>
                        </div>
                        <div class="pages">
                            <div class="pages-field paginator">
                                <a href="javascript:void(0)" class="prev"><i class="icon-keyboard_arrow_left"></i></a>
                                <span class="current-page"></span>
                                <a href="javascript:void(0)" class="next"><i class="icon-keyboard_arrow_right"></i></a>
                                <span class="total">из <span></span></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

{{#contentFor "footer"}}
    <!-- filters-categories -->
    <script src="/js/site/filters-categories.js"></script>
    <script>
        $(document).ready(function(){
            filCat.initialize({
                cont      : '.selResult',
                num       : '.selReN > .i',
                pagination: true,
                url_req   : '/',
            });

            setTimeout(filCat.selectCatalogs(), 0);
        });
    </script>

    <script>
        let objCh = [
            {
                name: 'weight',
                name_p: 'Вес',
                measure: 'г',

                value: [{col: 12, type: 'input', name: 'weight', name_p: 'Вес, г'}]
            },

            {
                name: 'thickness',
                name_p: 'Толщина',
                measure: 'мм',

                value: [{col: 12, type: 'input', name: 'thickness', name_p: 'Толщина'}]
            },

            {
                name: 'dimensions_length_width',
                name_p: 'Размеры',
                name_d: 'длина/ширина)',
                measure: 'мм',

                value: [
                    {col: 6, type: 'input', name: 'length', name_p: 'Длина'},
                    {col: 6, type: 'input', name: 'width', name_p: 'Ширина'}
                ]
            },

            {
                name: 'color',
                name_p: 'Цвет',
                name_d: '',

                value: [{col: 12, type: 'color', name: 'color', name_p: 'Цвет'}]
            },

            {
                name: 'concentrate_density_m3',
                name_p: 'Плотность концентрата',
                measure: 'г/см³',
                value: [{col: 12, type: 'input', name: 'concentrate_density_m3', name_p: 'Плотность концентрата'}]
            },

            {
                name: 'consumption_m2',
                name_p: 'Расход',
                measure: 'л на м²',
                value: [{col: 12, type: 'input', name: 'consumption_m2', name_p: 'Расход'}]
            }
        ];

        /**
         * init
         */
        function initChas() {
            _.map(objCh, function(v, k) { _render(v, {}); return k; })
        }

        /**
         * render characteristics
         * @param d0
         * @param val
         * @private
         */
        function _render(d0, val) {
            let t = '';
            val = _.isObject(val) ? val : {};

            t += `<div class="form-group row form-obj" id="${d0.name}-d">
                    <label class="label">${d0.name_p} ${d0.measure ? ', ' + d0.measure : ''}</label>
                    <!--<button class="closes btn btn-danger btn-sm"><i class="fa fa-close"></i></button>-->
                    <div class=""><div class="">`;

            for(let ii = 0; d0.value.length > ii; ii++) {
                let d = d0.value[ii];

                if(d.type === 'input') {
                    t += `<div class=""><input value="${val[d.name] || ''}" class="form-control" name="pl[params][${d0.name}][${d.name}]" type="text" placeholder="${d.name_p}"></div>
                            `;
                }

                if(d.type === 'color') {
                    t += `<div class="">
                            <input class="form-control" value="${val[d.name] || ''}" type="color" id="example-color-input" name="pl[params][${d0.name}][${d.name}]" type="text" placeholder="${d.name_p}"></div>
                            `;
                }
            }

            t += `</div>
            </div>
            </div>`;

            $('.cha-s .cont').append(t);
        }

        /**
         * render select
         * @param obj
         */
        function renderOptions(obj) {
            let n = '';

            for(let i = 0; obj.length > i; i++) {
                let d0 =obj[i];
                n += `<option value="${d0.name}">${d0.name_p}</option>`;
            }
        }

        renderOptions(objCh);
        initChas(objCh);
    </script>
{{/contentFor}}