<div class="con">
    <div class="wrapper border-bottom white-bg page-heading">
        <div class="col col-md-12">
            <h4>{{# if id}}Редактирование товара{{ else }}Добавление товара{{/if}}</h4>
        </div>
        <script>window.callModules = [];</script>

        <div class="ibox-content">
            <form method="post" class="form-modules form-horizontal form-label-left" id="form-products">
                {{#each plugins as |v| }}
                    {{{ v.html_top }}}
                    {{{ v.html }}}
                    {{{ v.html_bottom }}}

                    {{# iff v.plugins.name '==' 'album' }}
                        <script>
                            $.ajax({
                                type: "post",
                                url: "/admin/file_manager/show_loader",
                                data: {
                                    name_table : '{{ ../../table }}',
                                    id_album   : '{{ ../../id }}'
                                },
                                cache: false,
                                dataType: "html",
                                success: function (data) {
                                    $('#album').html(data);
                                }
                            })
                        </script>
                    {{/iff}}

                    {{# iff v.plugins.name '==' 'characteristics' }}
                        <script>
                            callModules[callModules.length] = function(body) {
                                $.ajax({
                                    type: "post",
                                    url: "/admin/components/show_loader_characteristics",
                                    data: {
                                        body       : body,
                                        name_table : '{{ ../../table }}',
                                        id_album   : '{{ ../../id }}',
                                    },
                                    cache: false,
                                    dataType: "html",
                                    success: function (data) {
                                        $('#characteristics').html(data);
                                    }
                                })
                            }
                        </script>
                    {{/iff}}

                    {{# iff v.plugins.name '==' 'brand' }}
                        <script>
                            callModules[callModules.length] = function(body) {
                                $.ajax({
                                    type: "post",
                                    url: "/admin/components/show_loader_brand",
                                    data: {
                                        body       : body,
                                        name_table : '{{ ../../table }}',
                                        id_album   : '{{ ../../id }}',
                                    },
                                    cache: false,
                                    dataType: "html",
                                    success: function (data) {
                                        $('#brand').html(data);
                                    }
                                })
                            }
                        </script>
                    {{/iff}}
                {{/each}}

                <input type="hidden" name="id" value="{{ id }}"/>
            </form>
        </div>
    </div>
</div>

<script>
    /**
     * Each arr
     * @param items
     * @returns {*}
     */
    function resultRevertId(items) {
        for(let i = 0; items.length > i; i++)
            if(_.isNumber(items[i].id))
                items[i].id = items[i].name;

        return items
    }

    /**
     * Tags init functions
     */
    function tagsInit() {
        setTimeout(function() {
            $(".select2-tag").select2({
                multiple: true,
                language: "ru",
                minimumInputLength: 2,
                tags: [],

                ajax: {
                    url: "/admin/_tools/getTags",
                    dataType: 'json',
                    delay: 250,
                    type: 'post',
                    data: function (params) {
                        return {
                            q: params.term, // search term
                            page: params.page
                        };
                    },

                    processResults: function (data, params) {
                        params.page = params.page || 1;

                        return {
                            results: resultRevertId(data.items),

                            pagination: {
                                more: (params.page * 30) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) { return markup; },

                templateResult: function(repo) {
                    if (repo.loading) return repo.text;
                    let name = '';

                    if(repo.isNew)
                        name = repo.name + ' (Новый тег. Добавится после сохранения)';
                    else
                        name = repo.name;

                    return name;
                },

                templateSelection: function(repo) {
                    return repo.name || repo.text;
                },

                width: '100%',
            });
        }, 1000)
    }

    function loadProduct() {
        var plugins = {{{ pluginsStr }}};
        var pluginsLang = {{{ pluginsLangStr }}};

        function ucfirst(str) {
            var f = str.charAt(0).toUpperCase();
            return f + str.substr(1, str.length - 1);
        }

        $.ajax({
            cache: false,
            url: '/admin/_tools/getDataSingle',
            data: {id: '{{ id }}', table: '{{ table }}'},
            type: 'post',
            dataType: 'JSON',
            success: function(data) {
                var text, body = data.data || {};

                console.log(body)
                if(_.isEmpty(body))
                    tagsInit();

                // init mode\ules
                _.map(callModules, v => v(body));

                if(_.isEmpty(body))
                    return false;

                _.map(pluginsLang, (v, k) => {
                    text = _.unescape(body[k]);

                    try {
                        text = JSON.parse(text);
                        if(text) {
                            $('[name="pl[' + k + '][ru]"]').val(_.unescape(text.ru));
                            $('[name="pl[' + k + '][en]"]').val(_.unescape(text.en));
                        }
                    } catch(err) {
                        // обработка ошибки
                    }
                });

                _.map(plugins, (v, k) => {
                    text = body[k];

                    if((v.plugins || {}).typeField === 'select' && text) {
                        if((v.plugins || {}).name === 'tags') {
                           let tags = [], t = '';

                            try {
                                tags = JSON.parse(text);
                            } catch(err) {
                                tags = text;
                            }

                            if(tags && _.isString(tags))
                                tags = [tags];

                           for(let i = 0; tags.length > i; i++)
                               if(tags[i])
                                   t += '<option value="' + tags[i] + '" selected>' + tags[i] + '</option>';

                            $('.select2-tag').html(t);

                            tagsInit()
                        } else {
                            $(".select2").select2({width: '100%'});
                            $('#select' + ucfirst(k)).val(text ? text : 0).trigger("change");
                        }
                    } else {
                        $('[name="pl[' + k + ']"]').val(_.unescape(text));
                    }
                });
            }
        });
    }

    loadProduct();
</script>


<script src="/js/admin/plugins/tinymce/tinymce.min.js"></script>
<script>
    tinymce.init({
        selector: ".area",
        plugins: [
            "advlist autolink lists link image charmap print anchor",
            "searchreplace visualblocks code fullscreen",
            "insertdatetime media table contextmenu paste",
            " imagetools fullscreen"
        ],
        toolbar: "fullscreen insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | fontselect fontsizeselect"
        + 'print media ',
        imagetools_cors_hosts: ['www.tinymce.com', 'codepen.io'],
        image_class_list: [
            {title: 'None', value: ''},
            {title: 'Clear', value: 'clear'},
            {title: 'Thumbnail', value: 'thumbnail'}
        ],

        class_list: [
            {title: 'None', value: ''},
            {title: 'Clear', value: 'clear'},
            {title: 'Thumbnail', value: 'thumbnail'}
        ],

        menubar: true,
        image_advtab: true,
        image_dimensions: true,
        document_base_url : "/",
        relative_urls: false,
        language: "ru",
        font_formats: "Andale Mono=andale mono,times;"+
        "Arial=arial,helvetica,sans-serif;"+
        "Arial Black=arial black,avant garde;"+
        "Book Antiqua=book antiqua,palatino;"+
        "Comic Sans MS=comic sans ms,sans-serif;"+
        "Courier New=courier new,courier;"+
        "Georgia=georgia,palatino;"+
        "Helvetica=helvetica;"+
        "Impact=impact,chicago;"+
        "Symbol=symbol;"+
        "Tahoma=tahoma,arial,helvetica,sans-serif;"+
        "Terminal=terminal,monaco;"+
        "Times New Roman=times new roman,times;"+
        "Trebuchet MS=trebuchet ms,geneva;"+
        "Verdana=verdana,geneva;"+
        "Webdings=webdings;"+
        "Wingdings=wingdings,zapf dingbats"
    });

    tinymce.init({
        selector: ".reviews",
        menubar: false,

        plugins: [
            "advlist autolink lists link image charmap print anchor",
            "searchreplace visualblocks code fullscreen",
            "insertdatetime media table contextmenu paste",
            " imagetools fullscreen"
        ],

        toolbar: "fullscreen insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | fontselect fontsizeselect"
        + 'print media ',

        language: "ru"
    });
</script>
